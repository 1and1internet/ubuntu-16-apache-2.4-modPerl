#!/usr/bin/perl
#
use strict;
$|=1;
my $cpan = "/var/www/cpan/";
my $source = "${cpan}/modules.conf";
my $log = "${cpan}/cpan_install.log";
my $lock = "${cpan}/cpan.lock";

(-d $cpan) or exit(0); # Protect drone tests

if(-e $lock) 
{
	print "Aborting due to lockfile presence\n";
}

open(FH, "> $lock") or die "Cannot open lockfile\n";
print FH localtime()."\n";
close(FH);

(-e $log) and unlink($log);

if(-e $source)
{
  print "Found '$source'\n";
  (-T $source) or die "'$source' is not a text file\n";
  open(FH, "$source") or die "Cannot open '$source' for reading\n";
  while(<FH>)
  {
    /^\s*#/ and next;
    s/[^\w:\-]//g;
    /^\-/ and die "Attempt to pass flag to cpanm via module name '$_'\n";
    while(/\.\./) { s/\.\.//g; }
    /[\w+]/ or next;
    logme("Installing ( if required ) $_");
    install($_);  
  }
  close(FH);
  logme("Finishing up at ".localtime());
  exit(0);
}

unlink($lock);

sub logme
{
  my $arg = shift;
  open(LOG, ">> $log");
  print "[".localtime()."] $arg\n";
  close(LOG);
}

sub install
{
  my $module = shift;
  my $cmd;
  eval {
    local $SIG{ALRM} = sub { die "alarm\n" }; 
    alarm 600;
    $cmd = `export PERL_CPANM_HOME='$cpan'; cpanm $module --local-lib /var/www/cpan/perl5/ --self-contained --verbose >> $log 2>&1`;
    alarm 0;
  };
  if ($@) {
    return "Caught sigalarm\n";
  }
  else
  {
    return $cmd;
  }
}
